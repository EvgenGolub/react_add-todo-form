{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","TodoList","todos","map","defoultTodo","Math","max","todosFromServer","isHasError","App","useState","setTodos","newTodo","setNewTodo","initialError","setInitialError","handleInputChange","key","value","prev","action","method","onSubmit","event","preventDefault","trim","prevValue","htmlFor","type","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"4NAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2BC3DI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,OCVCC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKL,OAA7C,SACGK,EAAKP,QCKH,IAAMU,EAA4B,SAAC,GAAc,IAL5BL,EAKgBM,EAAW,EAAXA,KACpCJ,GANoBF,EAMDM,EAAKN,OALvBO,EAAgBC,MAAK,SAAAN,GAAI,OAAIA,EAAKR,KAAOM,MAC3C,MAML,OACE,0BAAS,UAAQ,KAAKG,UAAS,mBAAcG,EAAKP,WAAa,uBAA/D,UACE,oBACEI,UAAU,kBACV,UAASG,EAAKZ,GAFhB,SAIGY,EAAKR,UAGLI,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QClBpBO,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASP,UAAU,WAAnB,SACGO,EAAMC,KAAI,SAAAL,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,EACN,UAASA,EAAKZ,IACTY,EAAKZ,UCJZkB,EAAc,CAClBlB,GAHgBmB,KAAKC,IAAL,MAAAD,KAAI,YAAQE,EAAgBJ,KAAI,SAAAL,GAAI,OAAIA,EAAKZ,QAAO,EAIpEI,MAAO,GACPC,WAAW,EACXC,OAAQ,GAGJgB,EAAa,CACjBlB,OAAO,EACPE,QAAQ,GAGGiB,EAAM,WACjB,MAA0BC,mBAASH,GAAnC,mBAAOL,EAAP,KAAcS,EAAd,KACA,EAA8BD,mBAASN,GAAvC,mBAAOQ,EAAP,KAAgBC,EAAhB,KACA,EAAwCH,mBAASF,GAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAEMC,EAAoB,SAACC,EAAaC,GACtCL,GAAW,SAAAM,GAAI,kCAAUA,GAAV,kBAAiBF,EAAMC,OACtCH,GAAgB,SAAAI,GAAI,kCAAUA,GAAV,kBAAiBF,GAAM,QA6B7C,OACE,sBAAKtB,UAAU,MAAf,UACE,+CAEA,uBACEyB,OAAO,aACPC,OAAO,OACPC,SA7BmB,SAACC,GAFV,IAACzB,GAGfyB,EAAMC,iBAEDZ,EAAQtB,MAAMmC,QACjBV,GAAgB,SAAAW,GAAS,kCAAUA,GAAV,IAAqBpC,OAAO,OAGlDsB,EAAQpB,QACXuB,GAAgB,SAAAW,GAAS,kCAAUA,GAAV,IAAqBlC,QAAQ,OAGnDoB,EAAQtB,MAAMmC,QAAWb,EAAQpB,UAbvBM,EAiBPc,EAjBsBD,EAAS,GAAD,mBAAKT,GAAL,CAAYJ,KAkBlDiB,GAAgB,SAAAW,GAAS,kCAAUA,GAAV,IAAqBpC,OAAO,OACrDyB,GAAgB,SAAAW,GAAS,kCAAUA,GAAV,IAAqBlC,QAAQ,OArBpCqB,EAAWT,KA8B3B,UAKE,sBAAKT,UAAU,QAAf,UACE,wBAAOgC,QAAQ,QAAf,mBAEE,uBACEzC,GAAG,QACH0C,KAAK,OACL,UAAQ,aACRV,MAAON,EAAQtB,MACfuC,YAAY,gBACZC,SAAU,SAAAP,GAAK,OAAIP,EACjB,QAASO,EAAMQ,OAAOb,aAK3BJ,EAAaxB,OACT,sBAAMK,UAAU,QAAhB,qCAGP,sBAAKA,UAAU,QAAf,UACE,wBAAOgC,QAAQ,OAAf,kBAEE,yBACEzC,GAAG,OACH,UAAQ,aACRgC,MAAON,EAAQpB,OACfsC,SAAU,SAAAP,GAAK,OAAIP,EACjB,UAAWO,EAAMQ,OAAOb,QAL5B,UAQE,wBAAQA,MAAM,IAAIc,UAAQ,EAA1B,2BACCjC,EAAgBI,KAAI,SAAAT,GAAI,OACvB,wBAEEwB,MAAOxB,EAAKR,GAFd,SAIGQ,EAAKP,MAHDO,EAAKR,aASjB4B,EAAatB,QACT,sBAAMG,UAAU,QAAhB,qCAGP,wBAAQiC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAU1B,MAAOA,QCnHvB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ba7c3f2f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const user = getUserById(todo.userId);\n\n  return (\n    <article data-id=\"15\" className={`TodoInfo ${todo.completed && 'TodoInfo--completed'}`}>\n      <h2\n        className=\"TodoInfo__title\"\n        data-id={todo.id}\n      >\n        {todo.title}\n      </h2>\n\n      {!!user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        data-id={todo.id}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nconst newTodoId = Math.max(...todosFromServer.map(todo => todo.id)) + 1;\n\nconst defoultTodo = {\n  id: newTodoId,\n  title: '',\n  completed: false,\n  userId: 0,\n};\n\nconst isHasError = {\n  title: false,\n  userId: false,\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [newTodo, setNewTodo] = useState(defoultTodo);\n  const [initialError, setInitialError] = useState(isHasError);\n\n  const handleInputChange = (key: string, value: string | number) => {\n    setNewTodo(prev => ({ ...prev, [key]: value }));\n    setInitialError(prev => ({ ...prev, [key]: false }));\n  };\n\n  const reset = () => setNewTodo(defoultTodo);\n\n  const addTodo = (todo: Todo) => setTodos([...todos, todo]);\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!newTodo.title.trim()) {\n      setInitialError(prevValue => ({ ...prevValue, title: true }));\n    }\n\n    if (!newTodo.userId) {\n      setInitialError(prevValue => ({ ...prevValue, userId: true }));\n    }\n\n    if (!newTodo.title.trim() || !newTodo.userId) {\n      return;\n    }\n\n    addTodo(newTodo);\n    setInitialError(prevValue => ({ ...prevValue, title: false }));\n    setInitialError(prevValue => ({ ...prevValue, userId: false }));\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n            <input\n              id=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={newTodo.title}\n              placeholder=\"Enter a title\"\n              onChange={event => handleInputChange(\n                'title', event.target.value,\n              )}\n            />\n          </label>\n\n          {initialError.title\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            User:\n            <select\n              id=\"user\"\n              data-cy=\"userSelect\"\n              value={newTodo.userId}\n              onChange={event => handleInputChange(\n                'userId', +event.target.value,\n              )}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {initialError.userId\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}